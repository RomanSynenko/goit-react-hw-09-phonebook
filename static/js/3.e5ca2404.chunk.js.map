{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/ContactForm/Form.module.scss","Components/ContatctList/List.module.scss","Components/Filter/Filter.module.scss","redux/contact/contact-selector.js","redux/contact/contact-operation.js","Components/ContactForm/ContactForm.js","Components/ContatctList/ContatctList.js","Components/Filter/Filter.js","pages/ContactPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getLoad","state","contact","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","contacts","normolizedFilter","toLowerCase","name","includes","getContactName","map","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","addContactRequest","post","addContactSuccess","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","ContactForm","useDispatch","useState","setName","number","setNumber","loadContact","useSelector","loadName","useEffect","contactOperation","handleChangeForm","target","console","warn","uniqueContact","find","onSubmit","useCallback","Loader","className","s","title","contact_form","e","preventDefault","alert","contact_input","type","placeholder","onChange","contact_bth","ContactList","deleteContact","id","dataset","contactsOperation","contact_list","contact_item","contact_name","delete_button","onClick","data-id","Filter","filterContact","search_block","ContactPage"],"mappings":"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","file":"static/js/3.e5ca2404.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__3NbAF\",\"contact_form\":\"Form_contact_form__n2Wti\",\"contact_input\":\"Form_contact_input__39-kE\",\"contact_bth\":\"Form_contact_bth__ETHqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"List_contact_list__3d9ss\",\"delete_button\":\"List_delete_button__1Fy4K\",\"contact_item\":\"List_contact_item__11C51\",\"contact_name\":\"List_contact_name__J7qw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__21DuS\",\"contact_input\":\"Filter_contact_input__3mrr1\",\"search_block\":\"Filter_search_block__2np_P\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoad = state => state.contact.loading;\nexport const getFilter = state => state.contact.filter;\nconst getAllContacts = state => state.contact.items;\nexport const getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normolizedFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normolizedFilter),\n        );\n    },\n);\nexport const getContactName = createSelector([getAllContacts], contacts => {\n    return contacts.map(({ name }) => name);\n});\n","import axios from 'axios';\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n} from './contact-action';\n\nconst fetchContact = () => async dispatch => {\n    dispatch(fetchContactRequest());\n    try {\n        const { data } = await axios.get('/contacts');\n        dispatch(fetchContactSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactError(error.message));\n    }\n};\n\nconst addContact = contact => async dispatch => {\n    dispatch(addContactRequest());\n    try {\n        const { data } = await axios.post('/contacts', contact);\n        dispatch(addContactSuccess({ ...data }));\n    } catch (error) {\n        dispatch(addContactError(error.message));\n    }\n};\n\nconst deleteContact = contactId => async dispatch => {\n    dispatch(deleteContactRequest());\n    try {\n        const { data } = await axios.delete(`/contacts/${contactId}`);\n        dispatch(deleteContactSuccess(contactId));\n    } catch (error) {\n        dispatch(deleteContactError(error.message));\n    }\n};\n\nexport default { fetchContact, addContact, deleteContact };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nimport { getLoad, getContactName } from '../../redux/contact/contact-selector';\nimport contactOperation from '../../redux/contact/contact-operation';\nimport Loader from '../Loader';\n\nimport s from './Form.module.scss';\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const loadContact = useSelector(getLoad);\n    const loadName = useSelector(getContactName);\n\n    useEffect(() => {\n        dispatch(contactOperation.fetchContact());\n    }, [dispatch]);\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n    };\n\n    const handleChangeForm = ({ target }) => {\n        const { name, value } = target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                console.warn(``);\n        }\n    }\n    const uniqueContact = name => {\n        const contact = !loadName.find(contact => contact === name);\n        return contact;\n    };\n    const onSubmit = useCallback(\n        data => {\n            dispatch(contactOperation.addContact(data));\n        },\n        [dispatch],\n    );\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        uniqueContact(name);\n        if (name !== '') {\n            if (!uniqueContact(name)) {\n                alert(`'${name} is already in contacts'`);\n                return;\n            } else {\n                onSubmit({ name: name, number: number });\n                resetForm();\n            }\n            return;\n        }\n        alert('Enter the name or number');\n    }\n\n    return (\n        <>\n            {loadContact && <Loader />}\n            <h2 className={s.title}>Contact Form</h2>\n            <form className={s.contact_form} onSubmit={handleFormSubmit}>\n                <input\n                    className={s.contact_input}\n                    type=\"text\" name='name'\n                    placeholder='Enter name'\n                    value={name}\n                    onChange={handleChangeForm} />\n                <input\n                    className={s.contact_input}\n                    type=\"tel\" name='number'\n                    placeholder='Enter phone number'\n                    value={number}\n                    onChange={handleChangeForm} />\n                <button className={s.contact_bth}\n                    type='submit'>Add contact</button>\n            </form>\n        </>\n    )\n};\n\n\n\n\n\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Counter extends React.Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             count: 0\n//         };\n//     }\n\n//     inc() {\n//         this.setState((prevState) => ({ count: prevState.count + 1 }));\n//         // this.setState((prevState) => ({ count: prevState.count + 1 }));\n//         // this.setState((prevState) => ({ count: prevState.count + 1 }));\n//         // this.setState((prevState) => ({ count: prevState.count + 1 }));\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <div>count {this.state.count}</div>\n//                 <button onClick={this.inc.bind(this)}>inc</button>\n//             </div>\n//         );\n//     }\n// }\n\n// export default function App() {\n//     return <Counter />;\n// }\n","import React from 'react';\nimport s from './List.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { getVisibleContacts } from '../../redux/contact/contact-selector';\nimport contactsOperation from '../../redux/contact/contact-operation';\n\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getVisibleContacts);\n    const deleteContact = e => {\n        const id = e.target.dataset.id;\n        dispatch(contactsOperation.deleteContact(id));\n    };\n    if (contacts.length === 0) return null\n    return (\n        <ul className={s.contact_list}>\n            {contacts.map(({ id, name, number }) =>\n                <li key={id} className={s.contact_item} >\n                    <p className={s.contact_name}>{name}</p> : <p>{number}</p>\n                    <button className={s.delete_button}\n                        type=\"button\"\n                        onClick={deleteContact}\n                        data-id={id}>\n                        Delete\n                </button>\n                </li>\n            )}\n        </ul >\n    )\n};\nexport default ContactList;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport s from './Filter.module.scss';\nimport { filterContact } from '../../redux/contact/contact-action';\nimport { getFilter } from '../../redux/contact/contact-selector';\n\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const value = useSelector(getFilter);\n    const onChange = useCallback(\n        e => {\n            dispatch(filterContact(e.target.value))\n        },\n        [dispatch],\n    )\n    return (\n        <div className={s.search_block}>\n            <h2 className={s.title}>Contacts list</h2>\n            <input\n                className={s.contact_input}\n                type=\"text\"\n                name='filter'\n                value={value}\n                onChange={onChange}\n                placeholder='Enter name for your Search'\n            />\n        </div>\n    )\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport ContactForm from \"../Components/ContactForm\";\nimport ContactList from \"../Components/ContatctList\";\nimport Filter from \"../Components/Filter\";\n\n\n\nconst ContactPage = () => {\n    return (\n        <>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </>\n    )\n};\nexport default ContactPage;\n"],"sourceRoot":""}