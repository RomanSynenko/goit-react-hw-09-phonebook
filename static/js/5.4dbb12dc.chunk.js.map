{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/RegisterPage.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","console","warn","className","onSubmit","preventDefault","authOperation","register","autoComplete","type","placeholder","onChange"],"mappings":"kJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,0HIAvF,SAASC,IACtB,IAAMC,EAAWC,cADoB,EAEbC,mBAAS,IAFI,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGXF,mBAAS,IAHE,mBAG9BG,EAH8B,KAGvBC,EAHuB,OAILJ,mBAAS,IAJJ,mBAI9BK,EAJ8B,KAIpBC,EAJoB,KAM/BC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBR,EADkB,EAClBA,KAAMT,EADY,EACZA,MACd,OAAQS,GACN,IAAK,OACHC,EAAQV,GACR,MAEF,IAAK,QACHY,EAASZ,GACT,MAEF,IAAK,WACHc,EAAYd,GACZ,MAEF,QACEkB,QAAQC,KAAR,2BAAiCV,EAAjC,iBAaN,OACE,gCACE,oBAAIW,UAAU,cAAd,2BACA,uBACEC,SAbe,SAAAL,GACnBA,EAAEM,iBACFhB,EAASiB,IAAcC,SAAS,CAAEf,KAAMA,EAAME,MAAOA,EAAOE,SAAUA,KACtEH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASRM,UAAU,aACVK,aAAa,MAHf,UAKE,yCAEA,uBACIL,UAAU,cACVM,KAAK,OACLjB,KAAK,OACLkB,YAAY,OACZ3B,MAAOS,EACPmB,SAAUb,OAId,0CAEA,uBACIK,UAAU,cACVM,KAAK,QACLjB,KAAK,QACLkB,YAAY,QACZ3B,MAAOW,EACPiB,SAAUb,OAId,6CAEA,uBACIK,UAAU,cACVM,KAAK,WACLjB,KAAK,WACLkB,YAAY,uCACZ3B,MAAOa,EACPe,SAAUb,OAGd,wBAAQK,UAAU,YAAYM,KAAK,SAAnC","file":"static/js/5.4dbb12dc.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperation } from '../redux/auth';\n\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        console.warn(`Type input name- ${name} not exist`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperation.register({ name: name, email: email, password: password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n\n  return (\n    <div>\n      <h1 className='title-login'>Register page</h1>\n      <form\n        onSubmit={handleSubmit}\n        className='login_form'\n        autoComplete=\"off\"\n      >\n        <label >\n          Name\n        <input\n            className='login_input'\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label >\n          Email\n        <input\n            className='login_input'\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label >\n          Password\n        <input\n            className='login_input'\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password at least eight symbol\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button className='login-bth' type=\"submit\">Register</button>\n      </form>\n    </div >\n  )\n};\n\n// const mapDispatchToProps = {\n//   onRegister: authOperation.register,\n// };\n\n// export default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}