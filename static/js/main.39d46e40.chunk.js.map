{"version":3,"sources":["redux/auth/auth-action.js","redux/auth/auth-reducer.js","Components/Pnotify/Pnotify.js","redux/auth/auth-operation.js","redux/auth/auth-selector.js","redux/contact/contact-action.js","Routers/PrivateRoute.js","Routers/PublicRoute.js","Routers/Routers.js","Components/Container/Container.js","Components/Header/Navigation/Navigation.js","Components/Header/UserMenu/UserMenu.js","Components/Header/AuthNav/AuthNav.js","Components/Header/Header.js","Components/App.js","redux/contact/contact-reducer.js","redux/store.js","index.js","Components/Loader/Loader.js","Components/Loader/Loader.module.scss"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","authAction","user","createReducer","_","payload","token","error","isAuthenticated","combineReducers","success","title","delay","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","respons","data","Pnotify","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","response","getIsAuthenticated","state","getUserName","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","PrivateRoute","Component","component","redirectTo","routeProps","useSelector","authSelector","render","props","to","PublicRoute","restricted","HomePage","lazy","ContactPage","LoginPage","RegisterPage","Pages","fallback","Loader","path","exact","Container","children","className","Navigation","activeClassName","UserMenu","useDispatch","LogOut","useCallback","authOperation","type","onClick","AuthNav","Header","App","useEffect","items","filter","contact","id","loading","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","s","color","height","width","module","exports"],"mappings":"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","file":"static/js/main.39d46e40.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/gerCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/gerCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/gerCurrentUserError');\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authAction from './auth-action';\n\nconst initialUserState = { name: null, email: null };\nconst {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError } = authAction;\n\nconst user = createReducer(initialUserState, {\n    [registerSuccess]: (_, { payload }) => payload.user,\n    [loginSuccess]: (_, { payload }) => payload.user,\n    [logoutSuccess]: () => initialUserState,\n    [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n    [registerSuccess]: (_, { payload }) => payload.token,\n    [loginSuccess]: (_, { payload }) => payload.token,\n    [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n    [registerError]: (_, { payload }) => payload,\n    [loginError]: (_, { payload }) => payload,\n    [logoutError]: (_, { payload }) => payload,\n    [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [registerSuccess]: () => true,\n    [loginSuccess]: () => true,\n    [getCurrentUserSuccess]: () => true,\n    [registerError]: () => false,\n    [loginError]: () => false,\n    [getCurrentUserError]: () => false,\n    [logoutSuccess]: () => false,\n});\n\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    error,\n});\n","import { success, error } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nconst goodRequest = () =>\n    success({\n        title: 'Success!',\n        delay: 1000\n    });\nconst notFound = () =>\n    error({\n        title: 'Bad Request',\n        delay: 1000\n    });\nexport default {\n    goodRequest,\n    error: notFound\n}","import axios from 'axios';\nimport authAction from './auth-action';\n\nimport Pnotify from '../../Components/Pnotify/Pnotify';\n\nconst {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n} = authAction;\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = '';\n    },\n};\n\nconst register = credentials => async dispatch => {\n    dispatch(registerRequest());\n    try {\n        const respons = await axios.post('/users/signup', credentials);\n        token.set(respons.data.token);\n        Pnotify.goodRequest();\n        dispatch(registerSuccess(respons.data));\n    } catch (error) {\n        Pnotify.error();\n        dispatch(registerError(error.message));\n    }\n};\n\nconst logIn = credentials => async dispatch => {\n    dispatch(loginRequest());\n    try {\n        const respons = await axios.post('/users/login', credentials);\n        token.set(respons.data.token);\n        dispatch(loginSuccess(respons.data));\n        Pnotify.goodRequest();\n    } catch (error) {\n        Pnotify.error();\n        dispatch(loginError(error.message));\n    }\n};\n\nconst logOut = () => async dispatch => {\n    dispatch(logoutRequest());\n    try {\n        await axios.post('/users/logout');\n        token.unset();\n        dispatch(logoutSuccess());\n    } catch (error) {\n        Pnotify.error();\n        dispatch(logoutError(error.message));\n    }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if (!persistedToken) {\n        return;\n    }\n\n    token.set(persistedToken);\n    dispatch(getCurrentUserRequest());\n\n    try {\n        const response = await axios.get('/users/current');\n        dispatch(getCurrentUserSuccess(response.data));\n    } catch (error) {\n        Pnotify.error();\n        dispatch(getCurrentUserError(error.message));\n    }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\n\nexport default { getIsAuthenticated, getUserName };","import { createAction } from '@reduxjs/toolkit';\n\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContact = createAction('contacts/changeFilter');\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { authSelector } from '../redux/auth';\n\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\n  const isAuthenticated = useSelector(authSelector.getIsAuthenticated);\n\n  return (\n    < Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? (<Component {...props} />) : (<Redirect to={redirectTo} />)\n\n      }\n    />\n  )\n};\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { authSelector } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  redirectTo,\n  ...routeProps\n}) => {\n  const isAuthenticated = useSelector(authSelector.getIsAuthenticated);\n  return (\n    < Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n};\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelector.getIsAuthenticated(state),\n// });\n\nexport default PublicRoute;\n","import React, { Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport Loader from '../Components/Loader';\n\n// import ContactPage from '../pages/ContactPage'\n\n\nconst HomePage = lazy(\n  () => import('../pages/HomePage') /* webpackChunkName: \"HomePage\" */,\n);\nconst ContactPage = lazy(\n  () =>\n    import('../pages/ContactPage') /* webpackChunkName: \"ContactPage\" */,\n);\nconst LoginPage = lazy(\n  () => import('../pages/LoginPage') /* webpackChunkName: \"RegisterPage\" */,\n);\nconst RegisterPage = lazy(\n  () => import('../pages/RegisterPage') /* webpackChunkName: \"LoginPage\" */,\n);\n\nconst Pages = () => {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Switch>\n        <PublicRoute path=\"/\" exact component={HomePage} />\n        <PrivateRoute\n          path=\"/contacts\"\n          component={ContactPage}\n          redirectTo=\"/login\"\n        />\n        <PublicRoute\n          path=\"/register\"\n          component={RegisterPage}\n          restricted\n          redirectTo=\"/contacts\"\n        />\n        <PublicRoute\n          path=\"/login\"\n          component={LoginPage}\n          restricted\n          redirectTo=\"/contacts\"\n        />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Pages;\n","import React from 'react';\n\nimport './ContainerStyle.scss'\n\nconst Container = ({ children }) => (\n    <main className=\"container\">{children}</main>\n);\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelector } from '../../../redux/auth';\nimport './NavigationStyle.scss';\n\nconst Navigation = () => {\n    const isAuthenticated = useSelector(authSelector.getIsAuthenticated);\n    return (\n        <nav>\n            <NavLink\n                className=\"link\"\n                activeClassName=\"activeLink\"\n                to=\"/\"\n                exact\n            >\n                Home\n        </NavLink>\n            {isAuthenticated && (<NavLink\n                className='link'\n                activeClassName='activeLink'\n                to=\"/contacts\"\n                exact\n            >\n                Contacts\n            </NavLink>\n            )}\n        </nav>\n    )\n}\n\nexport default Navigation;","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelector, authOperation } from '../../../redux/auth';\n\nimport './UserMenuStyle.scss'\n\nconst UserMenu = () => {\n    const dispatch = useDispatch();\n    const name = useSelector(authSelector.getUserName);\n    const LogOut = useCallback(\n        () => {\n            dispatch(authOperation.logOut())\n        },\n        [dispatch],\n    );\n    return (\n        <div className=\"logout-container\">\n            <span className='welcone-text'>Welcome {name} </span>\n            <button className=\"logout-button\" type=\"button\" onClick={LogOut}>\n                Log out\n        </button>\n        </div>\n    );\n};\n\n// const mapStateToProps = state => ({\n//     name: authSelector.getUserName(state),\n// });\n\n// const mapDispatchToProps = {\n//     logOut: authOperation.logOut,\n// };\n\nexport default UserMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './AuthNavStyle.scss'\n\nconst AuthNav = () => {\n    return (\n        <nav>\n            <NavLink\n                className=\"link\"\n                activeClassName=\"activeLink\"\n                to=\"/register\"\n                exact\n            >\n                Register\n      </NavLink>\n            <NavLink\n                className=\"link\"\n                activeClassName=\"activeLink\"\n                to=\"/login\"\n                exact\n            >\n                Login\n      </NavLink>\n        </nav>\n    );\n};\n\nexport default AuthNav;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Navigation from './Navigation'\nimport './Header.scss';\nimport { authSelector } from '../../redux/auth';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\n\nconst Header = () => {\n    const isAuthenticated = useSelector(authSelector.getIsAuthenticated);\n    return (\n        <header className=\"header-container\">\n            <Navigation />\n            <div className='registerContainer'>\n                {isAuthenticated ? <UserMenu /> : <AuthNav />}\n            </div>\n        </header>\n    );\n};\n\n\nexport default Header;","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperation } from \"../redux/auth\";\nimport Pages from \"../Routers/Routers\";\nimport Container from \"./Container\";\n\nimport Header from \"./Header\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperation.getCurrentUser())\n  }, [dispatch])\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Pages />\n      </Container>\n    </>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    filterContact,\n} from './contact-action';\n\n\nconst items = createReducer([], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [deleteContactSuccess]: (state, { payload }) =>\n        state.filter(contact => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n});\nconst filter = createReducer('', {\n    [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport persistReducer from 'redux-persist/es/persistReducer';\nimport persistStore from 'redux-persist/es/persistStore';\nimport contactReducer from \"./contact/contact-reducer\";\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\n\nconst authPersistConfig = {\n    key: 'token',\n    storage,\n    whitelist: ['token'],\n};\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    })\n];\n\nconst store = configureStore({\n    reducer: {\n        contact: contactReducer,\n        auth: persistReducer(authPersistConfig, authReducer),\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\nexport default { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from \"./Components/App\";\nimport { Provider } from \"react-redux\";\n\nimport store from './redux/store'\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport 'modern-normalize/modern-normalize.css';\nimport \"./index.css\";\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\"));\n","import React, { Component } from 'react'\n\nimport Loader from \"react-loader-spinner\";\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.scss';\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Loader\n                className={s.Loader}\n                type=\"Puff\"\n                color=\"#3f51b5\"\n                height={100}\n                width={100}\n            />\n        );\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__BIuQd\"};"],"sourceRoot":""}